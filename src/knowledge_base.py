"""Knowledge base for L√πnPetShop chatbot containing product and business information."""

# Business Information
BUSINESS_INFO = {
    "name": "L√πn PetShop",
    "tagline": "Th·ª©c ƒÉn, ph·ª• ki·ªán, spa, l∆∞u tr√∫",
    "tagline_en": "Food, accessories, spa, accommodation",
    "website": "https://lunpetshop.com/",
    "address": "46 VƒÉn C·∫≠n, Khu√™ Trung, C·∫©m L·ªá, ƒê√† N·∫µng 550000, Vietnam",
    "phone": "0935005762",
    "zalo": "0935005762",
    "facebook": "https://www.facebook.com/lunpetshop",
    "hours": "8:00 AM ‚Äì 9:30 PM",
}

# Product Categories for Cats
CAT_PRODUCTS = {
    "food": {
        "vi": "Th·ª©c ƒÉn cho M√®o",
        "en": "Cat Food",
        "count": 31,
        "examples": [
            {"name": "Th·ª©c ƒÉn h·∫°t GV tr·ªôn si√™u c·∫•p cho m√®o ‚Äì Mix 9 lo·∫°i 500g", "price": "80,000 ‚Ç´"}
        ]
    },
    "pate": {
        "vi": "Pate m√®o",
        "en": "Cat P√¢t√©",
        "count": 29,
        "examples": [
            {"name": "Pate Nekko cho m√®o 70g", "price": "16,000 ‚Ç´"}
        ]
    },
    "treats": {
        "vi": "ƒÇn v·∫∑t B√°nh Th∆∞·ªüng",
        "en": "Treats & Snacks",
        "count": 25,
    },
    "shampoo": {
        "vi": "S·ªØa t·∫Øm",
        "en": "Shampoo",
        "count": 26,
        "examples": [
            {"name": "S·ªØa t·∫Øm cho ch√≥ m√®o SENTEE 500ml", "price": "80,000 ‚Ç´"}
        ]
    },
    "litter": {
        "vi": "C√°t v·ªá sinh",
        "en": "Litter",
        "count": 15,
    },
    "toys": {
        "vi": "ƒê·ªì ch∆°i ch√≥ m√®o",
        "en": "Toys",
        "count": 34,
    },
    "clothing": {
        "vi": "Qu·∫ßn √°o",
        "en": "Clothing",
        "count": 35,
    },
    "beds": {
        "vi": "N·ªám L√≥t",
        "en": "Beds",
        "count": 15,
    },
}

# Product Categories for Dogs
DOG_PRODUCTS = {
    "food": {
        "vi": "Th·ª©c ƒÉn cho Ch√≥",
        "en": "Dog Food",
        "count": 8,
    },
    "pate": {
        "vi": "Pate ch√≥",
        "en": "Dog P√¢t√©",
        "count": 5,
    },
    "treats": {
        "vi": "ƒÇn v·∫∑t B√°nh Th∆∞·ªüng",
        "en": "Treats & Snacks",
        "count": 25,
        "examples": [
            {"name": "G√† vi√™n mix vi·ªát qu·∫•t s·∫•y l·∫°nh 100g", "price": "40,000 ‚Ç´"},
            {"name": "G√† vi√™n mix vi·ªát qu·∫•t s·∫•y l·∫°nh 500g", "price": "160,000 ‚Ç´"},
            {"name": "C√° h·ªìi vi√™n s·∫•y l·∫°nh 200g", "price": "110,000 ‚Ç´"},
            {"name": "B√°nh Th∆∞·ªüng cho C√∫n JerHigh Th√°i Lan", "price": "55,000 ‚Ç´"},
        ]
    },
    "shampoo": {
        "vi": "S·ªØa t·∫Øm",
        "en": "Shampoo",
        "count": 26,
    },
    "toys": {
        "vi": "ƒê·ªì ch∆°i ch√≥ m√®o",
        "en": "Toys",
        "count": 34,
    },
    "clothing": {
        "vi": "Qu·∫ßn √°o",
        "en": "Clothing",
        "count": 35,
        "examples": [
            {"name": "XL Smiling Face Floral Sweater", "price": "90,000 ‚Ç´"},
            {"name": "√Åo 4 ch√¢n c√≥ m≈© adidog", "price": "70,000 ‚Ç´"},
        ]
    },
    "beds": {
        "vi": "N·ªám L√≥t",
        "en": "Beds",
        "count": 15,
    },
    "leashes": {
        "vi": "V√≤ng C·ªï D√¢y D·∫Øt",
        "en": "Leashes & Collars",
        "count": 56,
    },
}

# General Product Categories
GENERAL_PRODUCTS = {
    "supplements": {
        "vi": "TP ch·ª©c nƒÉng",
        "en": "Supplements",
        "count": 16,
    },
    "bowls": {
        "vi": "B√°t ƒÉn B√¨nh N∆∞·ªõc",
        "en": "Bowls & Feeders",
        "count": 29,
    },
    "hygiene": {
        "vi": "D·ª•ng c·ª• v·ªá sinh",
        "en": "Hygiene Tools",
        "count": 7,
    },
    "flea_tick": {
        "vi": "Ve R·∫≠n",
        "en": "Flea & Tick Prevention",
        "count": 14,
    },
    "cones": {
        "vi": "Loa V√≤ng ch·ªëng li·∫øm",
        "en": "Protective Cones",
        "count": 9,
    },
}


def get_cat_products_text(language="vi"):
    """Generate text description of cat products."""
    if language == "vi":
        text = "üê± **S·∫£n ph·∫©m cho M√®o:**\n\n"
        for category in CAT_PRODUCTS.values():
            text += f"‚Ä¢ **{category['vi']}** - {category['count']} s·∫£n ph·∫©m\n"
            if "examples" in category:
                for example in category["examples"]:
                    text += f"  - {example['name']}: {example['price']}\n"
        text += f"\nüìû Li√™n h·ªá: {BUSINESS_INFO['zalo']} (Zalo) ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt!"
    else:
        text = "üê± **Cat Products:**\n\n"
        for category in CAT_PRODUCTS.values():
            text += f"‚Ä¢ **{category['en']}** - {category['count']} products\n"
            if "examples" in category:
                for example in category["examples"]:
                    text += f"  - {example['name']}: {example['price']}\n"
        text += f"\nüìû Contact: {BUSINESS_INFO['zalo']} (Zalo) for more details!"
    return text


def get_dog_products_text(language="vi"):
    """Generate text description of dog products."""
    if language == "vi":
        text = "üêï **S·∫£n ph·∫©m cho Ch√≥:**\n\n"
        for category in DOG_PRODUCTS.values():
            text += f"‚Ä¢ **{category['vi']}** - {category['count']} s·∫£n ph·∫©m\n"
            if "examples" in category:
                for example in category["examples"]:
                    text += f"  - {example['name']}: {example['price']}\n"
        text += f"\nüìû Li√™n h·ªá: {BUSINESS_INFO['zalo']} (Zalo) ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt!"
    else:
        text = "üêï **Dog Products:**\n\n"
        for category in DOG_PRODUCTS.values():
            text += f"‚Ä¢ **{category['en']}** - {category['count']} products\n"
            if "examples" in category:
                for example in category["examples"]:
                    text += f"  - {example['name']}: {example['price']}\n"
        text += f"\nüìû Contact: {BUSINESS_INFO['zalo']} (Zalo) for more details!"
    return text


def get_business_info_text(language="vi"):
    """Generate text description of business information."""
    if language == "vi":
        return f"""
üè™ **Th√¥ng tin v·ªÅ {BUSINESS_INFO['name']}**

üìç **ƒê·ªãa ch·ªâ:** {BUSINESS_INFO['address']}

üìû **Li√™n h·ªá:**
‚Ä¢ Phone/Zalo: {BUSINESS_INFO['zalo']}
‚Ä¢ Facebook: {BUSINESS_INFO['facebook']}

üïê **Gi·ªù m·ªü c·ª≠a:** {BUSINESS_INFO['hours']}

üêæ **D·ªãch v·ª•:** {BUSINESS_INFO['tagline']}

üåê **Website:** {BUSINESS_INFO['website']}
"""
    else:
        return f"""
üè™ **About {BUSINESS_INFO['name']}**

üìç **Address:** {BUSINESS_INFO['address']}

üìû **Contact:**
‚Ä¢ Phone/Zalo: {BUSINESS_INFO['zalo']}
‚Ä¢ Facebook: {BUSINESS_INFO['facebook']}

üïê **Hours:** {BUSINESS_INFO['hours']}

üêæ **Services:** {BUSINESS_INFO['tagline_en']}

üåê **Website:** {BUSINESS_INFO['website']}
"""


def get_contact_info_text(language="vi"):
    """Generate contact information text."""
    if language == "vi":
        return f"""
üì± **Th√¥ng tin Li√™n h·ªá:**

‚Ä¢ **Zalo:** {BUSINESS_INFO['zalo']}
‚Ä¢ **Phone:** {BUSINESS_INFO['phone']}
‚Ä¢ **Facebook:** {BUSINESS_INFO['facebook']}
‚Ä¢ **ƒê·ªãa ch·ªâ:** {BUSINESS_INFO['address']}

Ch√∫ng t√¥i s·∫µn s√†ng h·ªó tr·ª£ b·∫°n t·ª´ {BUSINESS_INFO['hours']} m·ªói ng√†y! üêæ
"""
    else:
        return f"""
üì± **Contact Information:**

‚Ä¢ **Zalo:** {BUSINESS_INFO['zalo']}
‚Ä¢ **Phone:** {BUSINESS_INFO['phone']}
‚Ä¢ **Facebook:** {BUSINESS_INFO['facebook']}
‚Ä¢ **Address:** {BUSINESS_INFO['address']}

We're here to help you from {BUSINESS_INFO['hours']} every day! üêæ
"""

